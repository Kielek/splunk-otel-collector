receivers:
  redis:
    # For more information on redis specific configuration, see
    # See https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/redisreceiver
    endpoint: "redis_db:6379"
    collection_interval: 10s
    password: ${REDIS_PASSWORD}
    metrics:
      redis.role:
        enabled: true
      redis.cmd.calls:
        enabled: true
extensions:
    health_check:
      endpoint: 0.0.0.0:13133
processors:
  batch:
exporters:
  splunk_hec/metrics:
      # Splunk HTTP Event Collector token.
      token: "00000000-0000-0000-0000-0000000000000"
      # URL to a Splunk instance to send data to.
      endpoint: "https://splunk_redis:8088/services/collector"
      # Splunk index, optional name of the Splunk index targeted.
      index: "metrics"
      # Maximum HTTP connections to use simultaneously when sending data. Defaults to 100.
      max_connections: 20
      # Whether to disable gzip compression over HTTP. Defaults to false.
      disable_compression: false
      # HTTP timeout when sending data. Defaults to 10s.
      timeout: 10s
      tls:
        # Whether to skip checking the certificate of the HEC endpoint when sending data over HTTPS. Defaults to false.
        # For this demo, we use a self-signed certificate on the Splunk docker instance, so this flag is set to true.
        insecure_skip_verify: true
  signalfx:
    # https://aws-otel.github.io/docs/partners/splunk#configuring-signalfx-exporter
    access_token: ${SPLUNK_ACCESS_TOKEN}
    realm: "${SPLUNK_REALM}"
  logging:
    loglevel: debug
service:
  telemetry:
    metrics:
      address: ":8888"
  pipelines:
    metrics/sfx:
      receivers: [redis]
      processors: [batch]
      exporters: [signalfx]
    metrics/logging:
      receivers: [redis]
      processors: [batch]
      exporters: [logging]
    #metrics/splunk:
    #  receivers: [redis]
    #  processors: [batch]
    #  exporters: [splunk_hec/metrics]
